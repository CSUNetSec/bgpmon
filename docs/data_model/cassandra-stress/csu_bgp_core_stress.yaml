#
# This is an example YAML profile for cassandra-stress
#
# insert data
# cassandra-stress user profile=/home/jake/stress1.yaml ops(insert=1)
#
# read, using query simple1:
# cassandra-stress profile=/home/jake/stress1.yaml ops(simple1=1)
#
# mixed workload (90/10)
# cassandra-stress user profile=/home/jake/stress1.yaml ops(insert=1,simple1=9)

keyspace: csu_bgp_core_test

keyspace_definition: |
  CREATE KEYSPACE csu_bgp_core_test WITH replication = {'class': 'NetworkTopologyStrategy', 'dc1': 2};

table: update_messages_by_time

table_definition: |
  CREATE TABLE csu_bgp_core_test.update_messages_by_time (
       time_bucket timestamp,
       timestamp timeuuid,
       announced_prefixes list< inet >,
       withdrawn_prefixes list< inet >,
       collector_ip_address inet,
       peer_ip_address inet,
       as_path list< bigint >,
       bytes blob,
       source text,
       source_set text,
       message_number bigint,
       PRIMARY KEY (time_bucket, timestamp)
  )
    WITH CLUSTERING ORDER BY (timestamp DESC)
#    AND compression = { 'class':'DateTieredCompactionStrategy' };

#extra_definitions: |
#  - CREATE INDEX on csu_bgp_core_test.update_messages_by_time(as_path);

#
# Optional meta information on the generated columns in the above table
# The min and max only apply to text and blob types
# The distribution field represents the total unique population
# distribution of that column across rows.  Supported types are
# 
#      EXP(min..max)                        An exponential distribution over the range [min..max]
#      EXTREME(min..max,shape)              An extreme value (Weibull) distribution over the range [min..max]
#      GAUSSIAN(min..max,stdvrng)           A gaussian/normal distribution, where mean=(min+max)/2, and stdev is (mean-min)/stdvrng
#      GAUSSIAN(min..max,mean,stdev)        A gaussian/normal distribution, with explicitly defined mean and stdev
#      UNIFORM(min..max)                    A uniform distribution over the range [min, max]
#      FIXED(val)                           A fixed distribution, always returning the same value
#      Aliases: extr, gauss, normal, norm, weibull
#
#      If preceded by ~, the distribution is inverted
#
# Defaults for all columns are size: uniform(4..8), population: uniform(1..100B), cluster: fixed(1)
#
columnspec:
  - name: announced_prefixes
    size: normal(3..9,6,2)
  - name: withdrawn_prefixes
    size: normal(0..2,1,1)
  - name: as_path
    size: normal(3..9,6,2)
  
insert:
  partitions: uniform(1..50)       # number of unique partitions to update in a single operation
                                  # if batchcount > 1, multiple batches will be used but all partitions will
                                  # occur in all batches (unless they finish early); only the row counts will vary
  batchtype: LOGGED               # type of batch to use
  select: uniform(1..10)/10       # uniform chance any single generated CQL row will be visited in a partition;
 
queries:
   aspath1:
      cql: SELECT * FROM csu_bgp_core_test.update_messages_by_time WHERE time_bucket = ? AND as_path CONTAINS ? LIMIT 10
      fields: samerow
   timerange1:
      cql: SELECT * FROM csu_bgp_core_test.update_messages_by_time WHERE time_bucket = ? AND timestamp > ? LIMIT 1000
      fields: samerow
