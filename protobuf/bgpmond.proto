syntax = "proto3";

package bgpmond;

service Bgpmond {
	rpc CloseSession(CloseSessionRequest) returns (Empty) {}
	rpc ListModules(Empty) returns (ListModulesReply) {}
	rpc ListSessions(Empty) returns (ListSessionsReply) {}
	rpc RunModule(RunModuleRequest)returns (RunModuleReply) {}
	rpc StartModule(StartModuleRequest) returns (StartModuleReply) {}
	rpc StopModule(StopModuleRequest) returns (Empty) {}
	rpc OpenSession(OpenSessionRequest) returns (OpenSessionReply) {}
	rpc Write(stream WriteRequest) returns (Empty) {}
}

message Empty {
}

/*
 * Module Messages
 */
enum ModuleType {
	GOBGP_LINK = 0;
	PREFIX_HIJACK = 1;
}

message GoBGPLinkModule {
	string address = 1;
	repeated string out_session_id = 2;
}

message PrefixHijackModule {
	string prefix = 1;
	repeated uint32 as_number = 2;
	int32 periodic_seconds = 3;
	int32 timeout_seconds = 4;
	repeated string in_session_id = 5;
}

/*
 * Module Command Messages
 */
message ListModulesReply {
	repeated string module_id = 1;
}

message RunModuleRequest {
	ModuleType type = 1;
	PrefixHijackModule prefix_hijack_module = 2;
}

message RunModuleReply {
	string module_message = 3;
}

message StartModuleRequest {
	ModuleType type = 1;
	string module_id = 2;
	GoBGPLinkModule gobgp_link_module = 3;
	PrefixHijackModule prefix_hijack_module = 4;
}

message StartModuleReply {
	string module_id = 3;
}

message StopModuleRequest {
	string module_id = 1;
}

/*
 * Session Messages
 */
enum SessionType {
	CASSANDRA = 0;
	FILE = 1;
}

message CassandraSession {
	string username = 1;
	string password = 2;
	repeated string hosts = 3;
}

message FileSession {
	string filename = 1;
}

/*
 * Session Command Messages 
 */
message CloseSessionRequest {
	string session_id = 1;
}

message ListSessionsReply {
	repeated string session_id = 1;
}

message OpenSessionRequest {
	SessionType type = 1;
	string session_id = 2;
	CassandraSession cassandra_session = 3;
	FileSession file_session = 4;
}

message OpenSessionReply {
	string session_id = 1;
}

/*
 * Write Messages
 */
message WriteRequest {
	enum Type {
		AS_NUMBER_LOCATION = 0;
		BGP_UPDATE = 1;
		IP_ADDRESS_LOCATION = 2;
		PREFIX_LOCATION = 3;
	}

	Type type = 1;
	string session_id = 2;
	ASNumberLocation as_number_location = 3;
	BGPUpdateMessage bgp_update_message = 4;
	IPAddressLocation ip_address_location = 5;
	PrefixLocation prefix_location = 6;
}

message ASNumberLocation {
	uint32 as_number = 1;
	string measure_date = 2;
	Location location = 3;
	string source = 4;
}

message BGPUpdateMessage {
    uint64 timestamp = 1;
    string collector_ip_address = 2;
    string collector_mac = 3;
    uint32 collector_port = 4;
    string peer_ip_address = 5;

    repeated uint32 as_path = 6;
    string next_hop = 9;

    repeated IPPrefix advertised_routes = 7;
    repeated IPPrefix withdrawn_routes = 8;
}

message IPAddressLocation {
	string ip_address = 1;
	string measure_date = 2;
	Location location = 3;
	string source = 4;
}

message IPPrefix {
    string prefix_ip_address = 1;
    uint32 prefix_mask = 2;
}

message Location {
	string country_code = 1;
	string state_code = 2;
	string city = 3;
	double latitude = 4;
	double longitude = 5;
}

message PrefixLocation {
    IPPrefix prefix = 1;
	string measure_date = 2;
	Location location = 3;
	string source = 4;
}
